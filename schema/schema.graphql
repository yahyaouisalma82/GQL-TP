type Infos {
    name: String!
    firstname: String!
}
enum Gender {
    MALE
    FEMALE
}
type Student {
    id: ID!
    name: String!
    age: Int!
    gender: Gender!
    classroom: Classroom
}
type Classroom {
    id: ID!
    designation: String!
    students: [Student!]
}
type Query {
    hello(name: String): String!
    infos: Infos!
    getAllStudents: [Student]
    getStudent(id:ID!): Student
    getTodo(id:String!):Todo
    getUser(id:String!):User 
}
enum Status{
    WAITING
    IN_PROGRESS
    CANCLED
    DONE
}
type Todo {
    id:String!
    name:String!
    content:String!
    status:Status!
    user:User
}
type User {
    id:String!
    name:String!
    email:String!
    todos:[Todo!]
}
input AddTodoInput{
    name:String!
    content:String! 
    user:String!
}
input DeleteTodoInput{
    id:String!
}
input ChangeTodoInput{
    id:String!
    name:String
    content:String
    status:Status
    user:String
}
type Mutation{
    addTodo(addTodoInput:AddTodoInput):Todo
    ModifyTodo(changeTodoInput:ChangeTodoInput):[Todo]
    DeleteTodo(deleteTodoInput:DeleteTodoInput):[Todo]

}
type Subscription {
    todo:TodoSubscription!
}
type TodoSubscription {
  mutation: String!
  data: Todo!
}